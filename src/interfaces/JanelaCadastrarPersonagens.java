
package interfaces;

import javax.swing.JOptionPane;
import entidade.Personagem;
import entidade.Personagem.Classe;
import entidade.Bolsa;
import entidade.SerMágico;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

import controle.ControladorCadastroPersonagens;




public class JanelaCadastrarPersonagens extends javax.swing.JFrame {
    ControladorCadastroPersonagens controlador;
    DefaultListModel modelo_lista_personagens;
    Bolsa[] bolsas_cadastrados;
    SerMágico[] seresMágicos_cadastrados;
  //modelo_lista_personagens = (DefaultListModel) personagensList.getModel();
 
    public JanelaCadastrarPersonagens(ControladorCadastroPersonagens controlador) {
        this.controlador = controlador;
        bolsas_cadastrados = Bolsa.getVisões();
        seresMágicos_cadastrados = SerMágico.getVisões();
        initComponents();
        inicializarListaPersonagens();
        limparCampos();
    }
      private void inicializarListaPersonagens(){
        modelo_lista_personagens = (DefaultListModel) personagensList.getModel();
        Personagem[] visões = Personagem.getVisões();
        for(Personagem visão : visões){
            modelo_lista_personagens.addElement(visão);
        }
    }
    
   private void informarErro (String mensagem) {
        JOptionPane.showMessageDialog (this, mensagem, "Erro", JOptionPane.ERROR_MESSAGE);
    }
   
   
   private SerMágico getVisãoSerSelecionado(Personagem personagem) {
        String chave_ser = personagem.getSerMagico().getNome();
        for (SerMágico visão_ser : seresMágicos_cadastrados) {
            if (visão_ser.getNome().equals(chave_ser)) {
                return visão_ser;
            }
        }
        return null;
    }

    private Bolsa getVisãoBolsaSelecionado(Personagem personagem ) {
        int chave_bolsa = personagem.getBolsa().getSequencial();
        for (Bolsa visão_bolsa : bolsas_cadastrados) {
            if (visão_bolsa.getSequencial() == chave_bolsa) {
                return visão_bolsa;
            }
        }
        return null;
    }
   
 private void limparCampos() {                              
            sequencialTextField.setText("");
            bolsas_cadastradosComboBox.setSelectedIndex(-1);
            seres_cadastradosComboBox.setSelectedIndex(-1);
            classeComboBox.setSelectedIndex(-1);
            nomeTextField.setText("");
            nivelTextField.setText("");
            pontosVidaTextField.setText("");
            pontosForçaTextField.setText("");
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private Personagem obtémPersonagemInformada() {
        String sequencial_str = sequencialTextField.getText();
        int sequencial = 0;
        if (!sequencial_str.isEmpty()) sequencial = Integer.parseInt(sequencial_str);
        
        Bolsa visão_bolsa = (Bolsa) bolsas_cadastradosComboBox.getSelectedItem();
        if (visão_bolsa == null) return null;
        
        SerMágico visão_ser = (SerMágico) seres_cadastradosComboBox.getSelectedItem();
        if (visão_ser == null) return null;
        
        String nome = nomeTextField.getText();
        if (nome.isEmpty()){ 
            return null;
        }
        
        String nivel_str = nivelTextField.getText();
        int nivel = 0;
        if (!nivel_str.isEmpty()) nivel = Integer.parseInt(nivel_str);
        else return null;
        
        String pontos_vida_str = pontosVidaTextField.getText();
        int pontos_vida = 0;
        if (!pontos_vida_str.isEmpty()) pontos_vida = Integer.parseInt(pontos_vida_str);
        else return null;
            
        String pontos_força_str = pontosForçaTextField.getText();
        int pontos_força =0;
        if (!pontos_força_str.isEmpty()) pontos_força = Integer.parseInt(pontos_força_str);
        else return null;
        
        
        Classe classe = null;
        if (classeComboBox.getSelectedItem() != null)
        classe = (Classe) classeComboBox.getSelectedItem();
        else return null;
        
        return new Personagem(sequencial, nome, nivel, pontos_vida,pontos_força, classe, visão_bolsa, visão_ser);
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        personagensList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sequencialTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        classeComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        nivelTextField = new javax.swing.JTextField();
        pontosVidaTextField = new javax.swing.JTextField();
        pontosForçaTextField = new javax.swing.JTextField();
        bolsas_cadastradosComboBox = new javax.swing.JComboBox();
        seres_cadastradosComboBox = new javax.swing.JComboBox();
        BotõesPainel = new javax.swing.JPanel();
        inserirButton = new javax.swing.JButton();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Personagens");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        personagensList.setModel(new DefaultListModel());
        personagensList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(personagensList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 311;
        gridBagConstraints.ipady = 65;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(17, 47, 0, 118);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel1.setText("Personagens");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(59, 144, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Sequencial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 154, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        sequencialTextField.setEditable(false);
        sequencialTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequencialTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = -24;
        gridBagConstraints.ipady = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(sequencialTextField, gridBagConstraints);

        jLabel3.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 178, 0, 0);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Nivel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 184, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText("Pontos de Vida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 132, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("Pontos de Força");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 126, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Classe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 178, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        classeComboBox.setModel(new DefaultComboBoxModel(Classe.values()));
        classeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classeComboBox(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(classeComboBox, gridBagConstraints);

        jLabel8.setText("Bolsas Cadastradas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 111, 0, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        jLabel9.setText("Seres Mágicos Cadastrados");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 68, 0, 0);
        getContentPane().add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 263;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 47, 0, 118);
        getContentPane().add(nomeTextField, gridBagConstraints);

        nivelTextField.setMinimumSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(nivelTextField, gridBagConstraints);

        pontosVidaTextField.setMinimumSize(new java.awt.Dimension(100, 22));
        pontosVidaTextField.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(pontosVidaTextField, gridBagConstraints);

        pontosForçaTextField.setMinimumSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(pontosForçaTextField, gridBagConstraints);

        bolsas_cadastradosComboBox.setModel(new DefaultComboBoxModel(bolsas_cadastrados));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 0);
        getContentPane().add(bolsas_cadastradosComboBox, gridBagConstraints);

        seres_cadastradosComboBox.setModel(new DefaultComboBoxModel(seresMágicos_cadastrados));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 255;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 47, 0, 118);
        getContentPane().add(seres_cadastradosComboBox, gridBagConstraints);

        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirPersonagem(evt);
            }
        });

        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPersonagem(evt);
            }
        });

        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarPersonagem(evt);
            }
        });

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerPersonagem(evt);
            }
        });

        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparCampos(evt);
            }
        });

        javax.swing.GroupLayout BotõesPainelLayout = new javax.swing.GroupLayout(BotõesPainel);
        BotõesPainel.setLayout(BotõesPainelLayout);
        BotõesPainelLayout.setHorizontalGroup(
            BotõesPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotõesPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inserirButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consultarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alterarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limparButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BotõesPainelLayout.setVerticalGroup(
            BotõesPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BotõesPainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BotõesPainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserirButton)
                    .addComponent(consultarButton)
                    .addComponent(alterarButton)
                    .addComponent(removerButton)
                    .addComponent(limparButton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(42, 175, 41, 118);
        getContentPane().add(BotõesPainel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inserirPersonagem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirPersonagem
          Personagem personagem = obtémPersonagemInformada();
          String mensagem_erro = null;
          if (personagem != null) mensagem_erro = controlador.inserirPersonagem(personagem);
          else mensagem_erro = "Algum atributo do Personagem não foi informado";
          if (mensagem_erro == null) {
            int sequencial = Personagem.últimoSequencial();
            personagem.setSequencial(sequencial);
            modelo_lista_personagens.addElement(personagem.getVisão());
            personagensList.setSelectedIndex(modelo_lista_personagens.size() - 1);
            sequencialTextField.setText("" + sequencial);
          } else informarErro (mensagem_erro);
    }//GEN-LAST:event_inserirPersonagem

    private void consultarPersonagem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarPersonagem
        Personagem visão_personagem = (Personagem) personagensList.getSelectedValue();
        Personagem personagem = null;
        String mensagem_erro = null;
        if (visão_personagem != null) {
        personagem = Personagem.buscarPersonagem(visão_personagem.getSequencial());
        if (personagem == null) mensagem_erro = "Personagem não cadastrada";
        } else mensagem_erro = "Nenhuma personagem selecionada";
        if (mensagem_erro == null) {
        sequencialTextField.setText(personagem.getSequencial() + "");
        bolsas_cadastradosComboBox.setSelectedItem(getVisãoBolsaSelecionado(personagem));
        seres_cadastradosComboBox.setSelectedItem(getVisãoSerSelecionado(personagem));
        classeComboBox.setSelectedItem(personagem.getClasse());
        nomeTextField.setText(personagem.getNome());
        nivelTextField.setText(personagem.getNivel()+ "");
        pontosVidaTextField.setText(personagem.getPontosVida() + "");
        pontosForçaTextField.setText(personagem.getPontosForça() + "");
        
        
        } else informarErro (mensagem_erro);
    }//GEN-LAST:event_consultarPersonagem

    private void alterarPersonagem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarPersonagem
        Personagem personagem = obtémPersonagemInformada();
        String mensagem_erro = null;
        if (personagem != null) 
            mensagem_erro = controlador.alterarPersonagem(personagem);
        else 
            mensagem_erro = "Algum atributo de personagem não foi informado";
        if (mensagem_erro != null) informarErro (mensagem_erro);
    }//GEN-LAST:event_alterarPersonagem

    private void removerPersonagem(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerPersonagem
        Personagem visão = (Personagem) personagensList.getSelectedValue();
        String mensagem_erro = null;
        if (visão != null) mensagem_erro = controlador.removerPersonagem(visão.getSequencial());
        else mensagem_erro = "Nenhum Personagem selecionado";
        if (mensagem_erro == null) {
            modelo_lista_personagens.removeElement(visão);
        } else informarErro (mensagem_erro);;
    }//GEN-LAST:event_removerPersonagem

    private void LimparCampos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparCampos
        limparCampos();
    }//GEN-LAST:event_LimparCampos

    private void sequencialTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequencialTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sequencialTextFieldActionPerformed

    private void classeComboBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classeComboBox
        // TODO add your handling code here:
    }//GEN-LAST:event_classeComboBox

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastrarPersonagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastrarPersonagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastrarPersonagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastrarPersonagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BotõesPainel;
    private javax.swing.JButton alterarButton;
    private javax.swing.JComboBox bolsas_cadastradosComboBox;
    private javax.swing.JComboBox classeComboBox;
    private javax.swing.JButton consultarButton;
    private javax.swing.JButton inserirButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparButton;
    private javax.swing.JTextField nivelTextField;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JList personagensList;
    private javax.swing.JTextField pontosForçaTextField;
    private javax.swing.JTextField pontosVidaTextField;
    private javax.swing.JButton removerButton;
    private javax.swing.JTextField sequencialTextField;
    private javax.swing.JComboBox seres_cadastradosComboBox;
    // End of variables declaration//GEN-END:variables
}
